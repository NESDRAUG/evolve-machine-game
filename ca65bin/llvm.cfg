MEMORY {
    HEADER:     start = $0000, size = $10, type = ro, file = %O, fill = yes;
    # donut needs 3 bytes of zp that remain between calls.
    DONUT:      start = $ed,    size = $03, type = rw, file = "";
    SCRATCHZP:  start = $f0,    size = $10, type = rw, file = "";
    BSS:        start = $0300,  size = $0200, type = rw, file = "";
    PRG_8: start = $8000,  size = $4000, type = ro, file = %O, fill = yes;
    PRG_8_2: start = $8000,  size = $4000, type = ro, file = %O, fill = yes;
    PRG_8_3: start = $8000,  size = $4000, type = ro, file = %O, fill = yes;
    PRG_c:  start = $c003,  size = $4000, type = ro, file = %O, fill = yes;
}

SEGMENTS {
    INES:       load = HEADER,  type = ro, define = yes, optional = yes;
    EXTRA1:     load = PRG_8_2,   type = ro, define = yes, optional = yes;
    EXTRA2:     load = PRG_8_3,   type = ro, define = yes, optional = yes;
    ZP:         load = SCRATCHZP, type = zp;
    ZEROPAGE:   load = DONUT,   type = zp;
    RAM:        load = BSS,     type = bss;
    BANKED:     load = PRG_8,   type = ro;
    CODE:       load = PRG_c,   type = ro;
    LOWCODE:    load = PRG_c,   type = ro;
    DPCM:       load = PRG_c,   type = ro, align = $40;
}
